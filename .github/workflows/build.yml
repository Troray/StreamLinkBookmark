name: Build Extensions

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Verify required files
        run: |
          # 检查必需的文件和目录是否存在
          required_files=(
            "lib"
            "image"
            "image/iina.webp"
            "image/potplayer.webp"
            "image/vlc.webp"
            "image/video.png"
            "_locales"
            "icons"
            "icons/icon-48.png"
            "icons/icon-96.png"
            "content.js"
            "popup.js"
            "popup.html"
            "manifest.json"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -e "$file" ]; then
              echo "Error: Required file/directory '$file' is missing"
              exit 1
            fi
          done
      
      - name: Create build directories
        run: |
          mkdir -p chrome firefox
      
      - name: Copy files to build directories
        run: |
          # 复制通用文件到两个目录
          for dir in chrome firefox; do
            cp -r lib $dir/
            cp -r image $dir/
            cp -r _locales $dir/
            cp -r icons $dir/
            cp content.js $dir/
            cp popup.js $dir/
            cp popup.html $dir/
          done
      
      - name: Update version in manifest.json
        run: |
          # 更新 Chrome 版本的 manifest.json
          cat manifest.json | jq 'del(.browser_specific_settings) | .version = env.VERSION' > chrome/manifest.json
          # 更新 Firefox 版本的 manifest.json
          cat manifest.json | jq '.version = env.VERSION' > firefox/manifest.json
      
      - name: Create Chrome extension zip
        run: |
          cd chrome
          zip -r ../Chrome.zip *
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install web-ext
        run: npm install -g web-ext
      
      - name: Build and sign Firefox addon
        working-directory: firefox
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_JWT_SECRET }}
        run: |
          # 如果有AMO凭据，签名XPI文件
          if [ -n "$WEB_EXT_API_KEY" ] && [ -n "$WEB_EXT_API_SECRET" ]; then
            web-ext sign --api-key=$WEB_EXT_API_KEY --api-secret=$WEB_EXT_API_SECRET
            # 重命名为简洁命名
            mv web-ext-artifacts/*.xpi ../Firefox.xpi
          else
            # 如果没有凭据，创建ZIP文件作为备选
            cd ../firefox
            zip -r ../Firefox.zip *
            echo "警告: 没有提供AMO凭据，创建了ZIP文件而不是签名的XPI"
          fi
      
      - name: Create Release Notes
        run: |
          cat > RELEASE_NOTES.md << EOL
          ## 抖音直播直链解析浏览器扩展 `v${{ env.VERSION }}` 版本
          
          ### 安装说明
          
          - **Chrome版本**: 下载 `Chrome.zip`，解压后在扩展管理页面通过"加载已解压的扩展程序"安装
          - **Firefox版本**: 下载 `Firefox.xpi`，直接拖放到Firefox中安装
          EOL
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Chrome.zip
            Firefox.xpi
            Firefox.zip
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}