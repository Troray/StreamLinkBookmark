name: Build Extensions

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Create build directories
        run: |
          mkdir -p chrome firefox
      
      - name: Copy files to build directories
        run: |
          # 复制通用文件到两个目录
          for dir in chrome firefox; do
            cp -r lib $dir/
            cp -r image $dir/
            cp -r _locales $dir/
            cp -r icons $dir/
            cp content.js $dir/
            cp popup.js $dir/
            cp popup.html $dir/
          done
      
      - name: Update version in manifest.json
        run: |
          # 更新 Chrome 版本的 manifest.json
          cat manifest.json | jq 'del(.browser_specific_settings) | .version = env.VERSION' > chrome/manifest.json
          # 更新 Firefox 版本的 manifest.json
          cat manifest.json | jq '.version = env.VERSION' > firefox/manifest.json
      
      - name: Create Chrome extension zip
        run: |
          cd chrome
          zip -r ../douyin-live-helper-chrome-v${{ env.VERSION }}.zip *
      
      - name: Create Firefox extension zip
        run: |
          cd firefox
          zip -r ../douyin-live-helper-firefox-v${{ env.VERSION }}.zip *
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            douyin-live-helper-chrome-v${{ env.VERSION }}.zip
            douyin-live-helper-firefox-v${{ env.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify required files
        run: |
          # 检查必需的文件和目录是否存在
          required_files=(
            "lib"
            "image"
            "_locales"
            "icons"
            "icons/icon-48.png"
            "icons/icon-96.png"
            "content.js"
            "popup.js"
            "popup.html"
            "manifest.json"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -e "$file" ]; then
              echo "Error: Required file/directory '$file' is missing"
              exit 1
            fi
          done